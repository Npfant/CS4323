#include <stdio.h>  // for printf
#include <stdlib.h> // for exit(1)
#include <unistd.h> // for fork

int main() {
  
    //parent reads train.txt for information 
    
    int trainPID = fork();

    if (trainPID < 0) { // fork failed; exit
        fprintf(stderr, "fork failed\n");
        exit(1);
    } 
    else if (trainPID == 0) { //child (new process)
        printf("TrainName: PID = %d PPID = %d\n", getpid(), getppid());
        
        //copies intersection paths for each Train
        
        /*
        EXAMPLE:
        
        Train1:IntersectionA,IntersectionB,IntersectionC
        Train2:IntersectionB,IntersectionD,IntersectionE
        Train3:IntersectionC,IntersectionD,IntersectionA
        Train4:IntersectionE,IntersectionB,IntersectionD
        
        */
    } 
    else { //parent goes down this path (main)
        printf("Parent: %d PID = %d PPID = %d\n", trainPID, getpid(), getppid());
    }

    printf("Train: %d PID = %d PPID = %d\n", trainPID, getpid(), getppid());
    
    //child then goes along track, with parent becoming server 

    return 0;
}
